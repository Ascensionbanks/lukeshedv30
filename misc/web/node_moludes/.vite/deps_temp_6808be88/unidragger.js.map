{
  "version": 3,
  "sources": ["../../unidragger/unidragger.js"],
  "sourcesContent": ["/*!\n * Unidragger v3.0.1\n * Draggable base class\n * MIT license\n */\n\n( function( window, factory ) {\n  // universal module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n        window,\n        require('ev-emitter'),\n    );\n  } else {\n    // browser global\n    window.Unidragger = factory(\n        window,\n        window.EvEmitter,\n    );\n  }\n\n}( typeof window != 'undefined' ? window : this, function factory( window, EvEmitter ) {\n\nfunction Unidragger() {}\n\n// inherit EvEmitter\nlet proto = Unidragger.prototype = Object.create( EvEmitter.prototype );\n\n// ----- bind start ----- //\n\n// trigger handler methods for events\nproto.handleEvent = function( event ) {\n  let method = 'on' + event.type;\n  if ( this[ method ] ) {\n    this[ method ]( event );\n  }\n};\n\nlet startEvent, activeEvents;\nif ( 'ontouchstart' in window ) {\n  // HACK prefer Touch Events as you can preventDefault on touchstart to\n  // disable scroll in iOS & mobile Chrome metafizzy/flickity#1177\n  startEvent = 'touchstart';\n  activeEvents = [ 'touchmove', 'touchend', 'touchcancel' ];\n} else if ( window.PointerEvent ) {\n  // Pointer Events\n  startEvent = 'pointerdown';\n  activeEvents = [ 'pointermove', 'pointerup', 'pointercancel' ];\n} else {\n  // mouse events\n  startEvent = 'mousedown';\n  activeEvents = [ 'mousemove', 'mouseup' ];\n}\n\n// prototype so it can be overwriteable by Flickity\nproto.touchActionValue = 'none';\n\nproto.bindHandles = function() {\n  this._bindHandles( 'addEventListener', this.touchActionValue );\n};\n\nproto.unbindHandles = function() {\n  this._bindHandles( 'removeEventListener', '' );\n};\n\n/**\n * Add or remove start event\n * @param {String} bindMethod - addEventListener or removeEventListener\n * @param {String} touchAction - value for touch-action CSS property\n */\nproto._bindHandles = function( bindMethod, touchAction ) {\n  this.handles.forEach( ( handle ) => {\n    handle[ bindMethod ]( startEvent, this );\n    handle[ bindMethod ]( 'click', this );\n    // touch-action: none to override browser touch gestures. metafizzy/flickity#540\n    if ( window.PointerEvent ) handle.style.touchAction = touchAction;\n  } );\n};\n\nproto.bindActivePointerEvents = function() {\n  activeEvents.forEach( ( eventName ) => {\n    window.addEventListener( eventName, this );\n  } );\n};\n\nproto.unbindActivePointerEvents = function() {\n  activeEvents.forEach( ( eventName ) => {\n    window.removeEventListener( eventName, this );\n  } );\n};\n\n// ----- event handler helpers ----- //\n\n// trigger method with matching pointer\nproto.withPointer = function( methodName, event ) {\n  if ( event.pointerId === this.pointerIdentifier ) {\n    this[ methodName ]( event, event );\n  }\n};\n\n// trigger method with matching touch\nproto.withTouch = function( methodName, event ) {\n  let touch;\n  for ( let changedTouch of event.changedTouches ) {\n    if ( changedTouch.identifier === this.pointerIdentifier ) {\n      touch = changedTouch;\n    }\n  }\n  if ( touch ) this[ methodName ]( event, touch );\n};\n\n// ----- start event ----- //\n\nproto.onmousedown = function( event ) {\n  this.pointerDown( event, event );\n};\n\nproto.ontouchstart = function( event ) {\n  this.pointerDown( event, event.changedTouches[0] );\n};\n\nproto.onpointerdown = function( event ) {\n  this.pointerDown( event, event );\n};\n\n// nodes that have text fields\nconst cursorNodes = [ 'TEXTAREA', 'INPUT', 'SELECT', 'OPTION' ];\n// input types that do not have text fields\nconst clickTypes = [ 'radio', 'checkbox', 'button', 'submit', 'image', 'file' ];\n\n/**\n * any time you set `event, pointer` it refers to:\n * @param {Event} event\n * @param {Event | Touch} pointer\n */\nproto.pointerDown = function( event, pointer ) {\n  // dismiss multi-touch taps, right clicks, and clicks on text fields\n  let isCursorNode = cursorNodes.includes( event.target.nodeName );\n  let isClickType = clickTypes.includes( event.target.type );\n  let isOkayElement = !isCursorNode || isClickType;\n  let isOkay = !this.isPointerDown && !event.button && isOkayElement;\n  if ( !isOkay ) return;\n\n  this.isPointerDown = true;\n  // save pointer identifier to match up touch events\n  this.pointerIdentifier = pointer.pointerId !== undefined ?\n    // pointerId for pointer events, touch.indentifier for touch events\n    pointer.pointerId : pointer.identifier;\n  // track position for move\n  this.pointerDownPointer = {\n    pageX: pointer.pageX,\n    pageY: pointer.pageY,\n  };\n\n  this.bindActivePointerEvents();\n  this.emitEvent( 'pointerDown', [ event, pointer ] );\n};\n\n// ----- move ----- //\n\nproto.onmousemove = function( event ) {\n  this.pointerMove( event, event );\n};\n\nproto.onpointermove = function( event ) {\n  this.withPointer( 'pointerMove', event );\n};\n\nproto.ontouchmove = function( event ) {\n  this.withTouch( 'pointerMove', event );\n};\n\nproto.pointerMove = function( event, pointer ) {\n  let moveVector = {\n    x: pointer.pageX - this.pointerDownPointer.pageX,\n    y: pointer.pageY - this.pointerDownPointer.pageY,\n  };\n  this.emitEvent( 'pointerMove', [ event, pointer, moveVector ] );\n  // start drag if pointer has moved far enough to start drag\n  let isDragStarting = !this.isDragging && this.hasDragStarted( moveVector );\n  if ( isDragStarting ) this.dragStart( event, pointer );\n  if ( this.isDragging ) this.dragMove( event, pointer, moveVector );\n};\n\n// condition if pointer has moved far enough to start drag\nproto.hasDragStarted = function( moveVector ) {\n  return Math.abs( moveVector.x ) > 3 || Math.abs( moveVector.y ) > 3;\n};\n\n// ----- drag ----- //\n\nproto.dragStart = function( event, pointer ) {\n  this.isDragging = true;\n  this.isPreventingClicks = true; // set flag to prevent clicks\n  this.emitEvent( 'dragStart', [ event, pointer ] );\n};\n\nproto.dragMove = function( event, pointer, moveVector ) {\n  this.emitEvent( 'dragMove', [ event, pointer, moveVector ] );\n};\n\n// ----- end ----- //\n\nproto.onmouseup = function( event ) {\n  this.pointerUp( event, event );\n};\n\nproto.onpointerup = function( event ) {\n  this.withPointer( 'pointerUp', event );\n};\n\nproto.ontouchend = function( event ) {\n  this.withTouch( 'pointerUp', event );\n};\n\nproto.pointerUp = function( event, pointer ) {\n  this.pointerDone();\n  this.emitEvent( 'pointerUp', [ event, pointer ] );\n\n  if ( this.isDragging ) {\n    this.dragEnd( event, pointer );\n  } else {\n    // pointer didn't move enough for drag to start\n    this.staticClick( event, pointer );\n  }\n};\n\nproto.dragEnd = function( event, pointer ) {\n  this.isDragging = false; // reset flag\n  // re-enable clicking async\n  setTimeout( () => delete this.isPreventingClicks );\n\n  this.emitEvent( 'dragEnd', [ event, pointer ] );\n};\n\n// triggered on pointer up & pointer cancel\nproto.pointerDone = function() {\n  this.isPointerDown = false;\n  delete this.pointerIdentifier;\n  this.unbindActivePointerEvents();\n  this.emitEvent('pointerDone');\n};\n\n// ----- cancel ----- //\n\nproto.onpointercancel = function( event ) {\n  this.withPointer( 'pointerCancel', event );\n};\n\nproto.ontouchcancel = function( event ) {\n  this.withTouch( 'pointerCancel', event );\n};\n\nproto.pointerCancel = function( event, pointer ) {\n  this.pointerDone();\n  this.emitEvent( 'pointerCancel', [ event, pointer ] );\n};\n\n// ----- click ----- //\n\n// handle all clicks and prevent clicks when dragging\nproto.onclick = function( event ) {\n  if ( this.isPreventingClicks ) event.preventDefault();\n};\n\n// triggered after pointer down & up with no/tiny movement\nproto.staticClick = function( event, pointer ) {\n  // ignore emulated mouse up clicks\n  let isMouseup = event.type === 'mouseup';\n  if ( isMouseup && this.isIgnoringMouseUp ) return;\n\n  this.emitEvent( 'staticClick', [ event, pointer ] );\n\n  // set flag for emulated clicks 300ms after touchend\n  if ( isMouseup ) {\n    this.isIgnoringMouseUp = true;\n    // reset flag after 400ms\n    setTimeout( () => {\n      delete this.isIgnoringMouseUp;\n    }, 400 );\n  }\n};\n\n// -----  ----- //\n\nreturn Unidragger;\n\n} ) );\n"],
  "mappings": "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",
  "names": ["window"]
}
